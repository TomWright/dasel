on: [push, pull_request]

env:
  GOLANG_VERSION: 1

name: Container build, test and publish
jobs:
  container:
    strategy:
      fail-fast: true
      matrix:
        include:
          - platform: alpine
            platform-tag: latest
            tags: |
              ghcr.io/tomwright/dasel:alpine
              ghcr.io/tomwright/dasel:${{ github.ref_name }}-alpine
          - platform: debian
            platform-tag: bookworm-slim
            tags: |
              ghcr.io/tomwright/dasel:latest
              ghcr.io/tomwright/dasel:${{ github.ref_name }}
    runs-on: ubuntu-latest
    steps:
        - name: Checkout
          uses: actions/checkout@v4
        - name: Set up QEMU
          uses: docker/setup-qemu-action@v3
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v3
        - name: Build and Export
          uses: docker/build-push-action@v5
          with:
            context: .
            load: true
            build-args: | 
              GOLANG_VERSION=${{ env.GOLANG_VERSION }}
              RELEASE_VERSION=${{ github.ref_name }}
              TARGET_BASE_IMAGE=${{ matrix.platform }}:${{ matrix.platform-tag }}
            tags: dasel:test
        - name: Test
          run: |
            echo '{"hello": "World"}' | docker run -i --rm dasel:test -r json 'hello'
        - name: Process version tag
          uses: nowsprinting/check-version-format-action@v4
          id: version
          with:
            prefix: 'v'
        - name: Set version tag variables
          if: ${{ steps.version.outputs.is_valid == 'true' }}
          run: |
            if [ "${{ matrix.platform }}" = "alpine" ]; then
              echo "VERSIONED_TAGS<<EOF" >> $GITHUB_ENV
              echo "ghcr.io/tomwright/dasel:${{ steps.version.outputs.major }}-alpine" >> $GITHUB_ENV
              echo "ghcr.io/tomwright/dasel:${{ steps.version.outputs.major }}.${{ steps.version.outputs.minor }}-alpine" >> $GITHUB_ENV
              echo "EOF" >> $GITHUB_ENV
            else
              echo "VERSIONED_TAGS<<EOF" >> $GITHUB_ENV
              echo "ghcr.io/tomwright/dasel:${{ github.ref_name }}-${{ matrix.platform-tag }}" >> $GITHUB_ENV
              echo "ghcr.io/tomwright/dasel:${{ steps.version.outputs.major }}-${{ matrix.platform-tag }}" >> $GITHUB_ENV
              echo "ghcr.io/tomwright/dasel:${{ steps.version.outputs.major }}.${{ steps.version.outputs.minor }}-${{ matrix.platform-tag }}" >> $GITHUB_ENV
              echo "ghcr.io/tomwright/dasel:${{ steps.version.outputs.major }}" >> $GITHUB_ENV
              echo "ghcr.io/tomwright/dasel:${{ steps.version.outputs.major }}.${{ steps.version.outputs.minor }}" >> $GITHUB_ENV
              echo "ghcr.io/tomwright/dasel:${{ steps.version.outputs.major }}" >> $GITHUB_ENV
              echo "ghcr.io/tomwright/dasel:${{ steps.version.outputs.major }}.${{ steps.version.outputs.minor }}" >> $GITHUB_ENV
              echo "EOF" >> $GITHUB_ENV
            fi
        - name: Login to GitHub Container Registry
          if: ${{ startsWith(github.ref, 'refs/tags/v') }}
          uses: docker/login-action@v3
          with:
            registry: ghcr.io
            username: TomWright
            password: ${{ secrets.GHCR_PAT }}
        - name: Build and Push
          if: ${{ startsWith(github.ref, 'refs/tags/v') }}
          uses: docker/build-push-action@v5
          with:
            context: .
            platforms: linux/amd64,linux/arm64
            push: true
            build-args: | 
              GOLANG_VERSION=${{ env.GOLANG_VERSION }}
              RELEASE_VERSION=${{ github.ref_name }}
              MAJOR_VERSION=${{ steps.version.outputs.major }}
              TARGET_BASE_IMAGE=${{ matrix.platform }}:${{ matrix.platform-tag }}
            tags: |
              ${{ matrix.tags }}
              ${{ env.VERSIONED_TAGS }}
