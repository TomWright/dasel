on:
  push:
    tags:
      - 'v*.*.*'

name: Build
jobs:
  publish:
    strategy:
      matrix:
        os:
          - linux
          - darwin
          - windows
        arch:
          - amd64
          - 386
          - arm64
          - arm
        include:
          - os: linux
            arch: amd64
            artifact_name: dasel_linux_amd64
            asset_name: dasel_linux_amd64
            test_version: true
          - os: linux
            arch: 386
            artifact_name: dasel_linux_386
            asset_name: dasel_linux_386
            test_version: false
          - os: darwin
            arch: amd64
            artifact_name: dasel_darwin_amd64
            asset_name: dasel_darwin_amd64
            test_version: false
          - os: darwin
            arch: arm64
            artifact_name: dasel_darwin_arm64
            asset_name: dasel_darwin_arm64
            test_version: false
          - os: windows
            arch: amd64
            artifact_name: dasel_windows_amd64.exe
            asset_name: dasel_windows_amd64.exe
            test_version: false
          - os: windows
            arch: 386
            artifact_name: dasel_windows_386.exe
            asset_name: dasel_windows_386.exe
            test_version: false
          - os: linux
            arch: arm64
            artifact_name: dasel_linux_arm64
            asset_name: dasel_linux_arm64
            test_version: false
          - os: linux
            arch: arm
            artifact_name: dasel_linux_arm32
            asset_name: dasel_linux_arm32
            test_version: false
        exclude:
            - os: darwin
              arch: 386
            - os: windows
              arch: arm64
            - os: windows
              arch: arm
            - os: darwin
              arch: arm
    name: Build ${{ matrix.os }} ${{ matrix.arch }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: '^1.24.0'
      - name: Set env
        run: echo RELEASE_VERSION=${GITHUB_REF:10} >> $GITHUB_ENV
      - name: Build
        run: GOOS=${{ matrix.os }} GOARCH=${{ matrix.arch }} CGO_ENABLED=0 go build -o target/release/${{ matrix.artifact_name }} -ldflags="-X 'github.com/tomwright/dasel/v2/internal.Version=${{ env.RELEASE_VERSION }}'" ./cmd/dasel
      - name: Test version
        if: matrix.test_version == true
        run: ./target/release/${{ matrix.artifact_name }} --version
      - name: Gzip binaries
        run: gzip -c ./target/release/${{ matrix.artifact_name }} > ./target/release/${{ matrix.artifact_name }}.gz
      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v1-release
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/release/${{ matrix.artifact_name }}
          asset_name: ${{ matrix.asset_name }}
          tag: ${{ github.ref }}
      - name: Upload gzip binaries to release
        uses: svenstaro/upload-release-action@v1-release
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/release/${{ matrix.artifact_name }}.gz
          asset_name: ${{ matrix.asset_name }}.gz
          tag: ${{ github.ref }}
